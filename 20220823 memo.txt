context 경로를 얻어내는 두가지 방법 중요!

java code 영역 : HttpServletRequest 객체의 .getContextPath() 메소드 호출하면
	context path 가 문자열로 리턴됨.

jsp 페이지에서의 html영역 : EL을 이용하면 클라이언트 웹브라우저에 출력할 수 있음.
	${pageContext.request.contextPath }

----------------------------------------------------------------------------------

파일을 업로드 한다고 생각해보면...
업로드 되는 파일의 정보는 
1. 파일의 이름
2. 파일의 실제 데이터(byte 알갱이)
3. 파일의 크기

파일 데이터가 전송되는 폼은 형태가 쬐끔 다르다.
(/file/pritvate/upload.jsp, /file/download.jsp 참고)

---------------------------------------------------

페이징 처리 방법

1. 정렬하기
2. 행번호 붙이기
3. 원하는 범위의 행 번호만 SELECT 하기.


//select 문의 뼈대 구성하기
String sql = "SELECT *"
+ " FROM"
+ "    (SELECT result1.*, ROWNUM AS rnum" << ROWNUM 은 호출될 때마다 1,2,3.. 숫자를 반환하는 함수.
+ "    FROM"
+ "        (SELECT num, writer, title, orgFileName, fileSize, regdate"
+ "        FROM board_file"
+ "        ORDER BY num DESC) result1)"
+ " WHERE rnum BETWEEN ? AND ?"; << 한 페이지에 몇개씩 나타낼 건지 조건절.
>> pstmt.setInt(1, dto.getStartRowNum()); 와 pstmt.setInt(2, dto.getEndRowNum());

pageRowCount 한 페이지에 (pageowCount)10개씩 나타낸다고 하면 수식을 어떻게 쓰면 될까?
n번째 페이지에 나타낼 글 번호는 (n-1)*10+1 ~ n*10 까지가 되겠지. (등차수열 ^^) 
>> 1+(n-1)*pageRowCount~n*pageRowCount 라고 하면 수식 완성
시작하는 곳은 startRowNum, 끝나는 곳은 endRowNum. 
Dto에서 이것만 잘 계산해서 Dao에 던져주면 Row를 셀렋해 줄거야~
( startRowNum,endRowNum. 은 /file/list.jsp 에 있음.)


(SELECT num, writer, title, orgFileName, fileSize, regdate"
+ "        FROM board_file"
+ "        ORDER BY num DESC) result1)" << 이건 1차적으로 정렬을 목적.

-------------------------------------------------------------------------------------------------------------------

정규표현식

정규표현식을 이해하면 정규표현식 객체를 활용해서 아래와 같은 작업을 할 수가 있다.

- 어떤 문자열에 특정 pattern 의 문자 혹은 문자열이 있는지 여부를 알 수가 있다.
- 어떤 문자열에서 특정 pattern 의 문자 혹은 문자열을 추출할 수가 있다.
- 어떤 문자열이 특정 pattern과 정확히 일치하는지 여부를 알 수가 있다.

예)	어떤 문자열에 특수문자가 포함되어 있는지 여부
	어떤 문자열이 이메일 형식과 일치하는지 여부
	어떤 문자열이 전화번호 형식과 일치하는지 여부
	어떤 문자열이 영문자 소문자 혹은 대문자, 혹은 숫자로만 이루어져있는지 여부 
	등등...


정규식에서 [] 는 []안에 들어간 글자들을 후보로 한 글자안에 그게 들어가 있는지 매칭한다.
[dH]. << 이면 d나 H를 가지고 있는 글자 한글자, 그리고 모든 문자 포함("."은 모든 문자 매칭이니까) 한글자 매칭.
[] 안에서 ^는 시작을 의미하는 게 아닌 not 의 의미이다. ^이하 모든 문자를 제외한다는 의미이다.
[^W-Z] 는 W부터 Z를 제외한 글자를 포함한다.


수량자(Quantifiers) : *, + , ? >> 수량자는 문자가 몇번 올수 있는지 정의한다.
* : 0번이상 (없어도 되고 여러개가 있어도 된다)
+ : 1번이상 (반드시 있어야 하며 여러개가 있어도 된다)
? : 0 번 또는 1번 (없어도 되고 있다면 오직 한개만 허용

특수문자 제외 : [a-zA-Z0-9]와 [\w]는 동치이다. (같은 표현) << 특문에는 한글도 포함.
특수문자만 : [^a-zA-Z0-9] 와 [\W]는 동치이다.
[0-9] 와 [\d]는 동치이다.
마찬가지로 [^0-9] 와 [\D]는 동치이다.


